üìÇ File & Directory Management
These are the fundamentals. You'll use them every single day.

ls: List directory contents. Use flags like -l (long format), -a (all files, including hidden), and -h (human-readable sizes).

cd: Change directories.

pwd: Print the current working directory.

cp: Copy files and directories. The -r flag is for recursive copying (copying a whole directory).

mv: Move or rename files and directories.

rm: Remove files and directories. Be careful with this one! The -r flag deletes a directory and its contents, and -f forces deletion without prompting.

mkdir: Create a new directory.

touch: Create an empty file or update the timestamp of an existing file.

find: Search for files and directories based on various criteria (name, size, type, etc.).

grep: Search for patterns in text. This is a must-have for searching through log files.

sed: A stream editor for filtering and transforming text. Great for find-and-replace in files.

awk: A powerful pattern-scanning and text-processing language.

üîê Permissions & Ownership
Understanding how to secure files and directories is critical in a multi-user environment.

chmod: Change the permissions of a file or directory (read, write, execute).

chown: Change the owner and group of a file or directory.

‚öôÔ∏è Process Management
You need to know what's running on your systems and how to manage it.

ps: Display information about active processes. Use aux flags (ps aux) to see all processes.

top / htop: Display real-time information about system processes. htop is a more user-friendly version of top.

kill: Terminate a process by its ID.

pgrep: Find the process ID of a running program.

üåê Networking
DevOps is all about connecting services. These commands are your window into the network.

ip addr or ifconfig: Display and manage network interfaces. ip is the modern replacement for ifconfig.

ping: Test network connectivity to another host.

netstat or ss: Display network connections, routing tables, and interface statistics. ss is the modern replacement for netstat.

curl or wget: Transfer data from or to a server. Essential for testing APIs and downloading files.

ssh: Securely connect to a remote machine.

üñ•Ô∏è System Information & Monitoring
Know your system's health and configuration at a glance.

uname -a: Print all system information (kernel version, OS, etc.).

df -h: Display disk space usage in a human-readable format.

du -h: Display directory space usage in a human-readable format.

free -h: Display the amount of free and used memory in the system.

uptime: Show how long the system has been running.

journalctl: Query and display logs from the systemd journal. Use --since "1 hour ago" to filter by time.

üì¶ Package Management (Ubuntu/Debian)
Installing, updating, and removing software is a core task.

sudo apt update: Refresh the package list from the repositories.

sudo apt upgrade: Upgrade all installed packages to their latest versions.

sudo apt install <package_name>: Install a new package.

sudo apt remove <package_name>: Remove a package.

üóÑÔ∏è Archiving & Compression
You'll often need to bundle files for backups or transfers.

tar: Create or extract .tar archives. Common flags are -c (create), -x (extract), -v (verbose), -f (file), and -z (for gzip compression, creating .tar.gz or .tgz files).

gzip / gunzip: Compress or decompress files.

zip / unzip: For working with .zip archives.







# Basic System Commands
sudo apt update                # Update package lists
sudo apt upgrade               # Upgrade installed packages
sudo apt install <package>     # Install a package
sudo apt remove <package>      # Remove a package
sudo systemctl status          # Show system status
sudo systemctl start <service> # Start a service
sudo systemctl stop <service>  # Stop a service
sudo systemctl restart <service> # Restart a service
sudo systemctl enable <service>  # Enable service at boot
sudo systemctl disable <service> # Disable service at boot

# User and Permission Management
sudo adduser <username>        # Add a new user
sudo usermod -aG <group> <user> # Add user to group
sudo passwd <username>         # Change user password
sudo chown <user>:<group> <file> # Change file owner
sudo chmod 755 <file>          # Change file permissions

# Networking
ip a                           # Show network interfaces
ping <host>                    # Ping a host
netstat -tuln                  # List open ports
ss -tuln                       # List open ports (modern)
curl <url>                     # Make HTTP requests
wget <url>                     # Download files

# Process Management
ps aux                         # List all processes
top                            # Show running processes
htop                           # Interactive process viewer
kill <pid>                     # Kill a process
pkill <name>                   # Kill process by name

# Disk and File Management
df -h                          # Show disk usage
du -sh <dir>                   # Show directory size
ls -l                          # List files
find <dir> -name <pattern>     # Find files
tar -czvf <archive.tar.gz> <dir> # Create compressed archive
unzip <file.zip>               # Unzip files

# Docker
sudo apt install docker.io     # Install Docker
sudo systemctl start docker    # Start Docker
sudo docker pull <image>       # Pull Docker image
sudo docker run <image>        # Run Docker container
sudo docker ps                 # List running containers
sudo docker stop <container>   # Stop container

# Kubernetes (with kubectl)
sudo snap install kubectl --classic # Install kubectl
kubectl get pods                  # List pods
kubectl get services              # List services
kubectl apply -f <file.yaml>      # Apply config
kubectl logs <pod>                # View pod logs

# Git
sudo apt install git              # Install Git
git clone <repo>                  # Clone repository
git status                        # Check repo status
git add <file>                    # Stage changes
git commit -m "message"           # Commit changes
git push                          # Push changes

# CI/CD Tools (Jenkins example)
sudo apt install openjdk-11-jdk   # Install Java (for Jenkins)
wget -q -O - https://pkg.jenkins.io/debian-stable/jenkins.io.key | sudo apt-key add -
sudo sh -c 'echo deb https://pkg.jenkins.io/debian-stable binary/ > /etc/apt/sources.list.d/jenkins.list'
sudo apt update
sudo apt install jenkins
sudo systemctl start jenkins

# Monitoring
sudo apt install prometheus       # Install Prometheus
sudo apt install grafana          # Install Grafana

# Miscellaneous
sudo reboot                       # Reboot system
sudo shutdown now                 # Shutdown system
history                           # Show command history
